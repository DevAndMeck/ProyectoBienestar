{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\nexport const roleGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const permisoRequerido = route.data[\"permisoRequerido\"];\n  if (permisoRequerido && authService.tienePermiso(permisoRequerido)) {\n    return true;\n  }\n  router.navigate([\"/dashboard\"]);\n  return false;\n};","map":{"version":3,"names":["inject","Router","AuthService","roleGuard","route","state","authService","router","permisoRequerido","data","tienePermiso","navigate"],"sources":["C:\\Users\\ferme\\Downloads\\roles-permisos-system\\frontend\\src\\app\\guards\\role.guard.ts"],"sourcesContent":["import { inject } from \"@angular/core\"\nimport { Router, type CanActivateFn } from \"@angular/router\"\nimport { AuthService } from \"../services/auth.service\"\n\nexport const roleGuard: CanActivateFn = (route, state) => {\n  const authService = inject(AuthService)\n  const router = inject(Router)\n\n  const permisoRequerido = route.data[\"permisoRequerido\"]\n\n  if (permisoRequerido && authService.tienePermiso(permisoRequerido)) {\n    return true\n  }\n\n  router.navigate([\"/dashboard\"])\n  return false\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,MAAM,QAA4B,iBAAiB;AAC5D,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAGN,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAE7B,MAAMO,gBAAgB,GAAGJ,KAAK,CAACK,IAAI,CAAC,kBAAkB,CAAC;EAEvD,IAAID,gBAAgB,IAAIF,WAAW,CAACI,YAAY,CAACF,gBAAgB,CAAC,EAAE;IAClE,OAAO,IAAI;;EAGbD,MAAM,CAACI,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EAC/B,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}