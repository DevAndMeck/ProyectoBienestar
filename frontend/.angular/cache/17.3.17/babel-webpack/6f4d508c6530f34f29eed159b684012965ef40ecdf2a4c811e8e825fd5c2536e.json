{"ast":null,"code":"import { BehaviorSubject, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = \"http://localhost/backend/api\";\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSubject.asObservable();\n    this.cargarUsuarioDesdeStorage();\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/auth/login.php`, {\n      username,\n      password\n    }).pipe(tap(response => {\n      if (response.token && response.usuario) {\n        localStorage.setItem(\"token\", response.token);\n        localStorage.setItem(\"usuario\", JSON.stringify(response.usuario));\n        this.currentUserSubject.next(response.usuario);\n      }\n    }));\n  }\n  logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"usuario\");\n    this.currentUserSubject.next(null);\n    this.router.navigate([\"/login\"]);\n  }\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n  getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n  tienePermiso(permiso) {\n    const usuario = this.getCurrentUser();\n    return usuario ? usuario.permisos.includes(permiso) : false;\n  }\n  esAdministrador() {\n    const usuario = this.getCurrentUser();\n    return usuario ? usuario.rol_nombre === \"Administrador\" : false;\n  }\n  cargarUsuarioDesdeStorage() {\n    const usuarioStr = localStorage.getItem(\"usuario\");\n    if (usuarioStr) {\n      try {\n        const usuario = JSON.parse(usuarioStr);\n        this.currentUserSubject.next(usuario);\n      } catch (e) {\n        console.error(\"Error al cargar usuario desde storage\", e);\n      }\n    }\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","tap","AuthService","constructor","http","router","apiUrl","currentUserSubject","currentUser$","asObservable","cargarUsuarioDesdeStorage","login","username","password","post","pipe","response","token","usuario","localStorage","setItem","JSON","stringify","next","logout","removeItem","navigate","getToken","getItem","getCurrentUser","value","isAuthenticated","tienePermiso","permiso","permisos","includes","esAdministrador","rol_nombre","usuarioStr","parse","e","console","error","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ferme\\Downloads\\roles-permisos-system\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport { HttpClient } from \"@angular/common/http\"\nimport { BehaviorSubject, type Observable, tap } from \"rxjs\"\nimport { Router } from \"@angular/router\"\nimport type { Usuario, LoginResponse } from \"../models/usuario.model\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  private apiUrl = \"http://localhost/backend/api\"\n  private currentUserSubject = new BehaviorSubject<Usuario | null>(null)\n  public currentUser$ = this.currentUserSubject.asObservable()\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n  ) {\n    this.cargarUsuarioDesdeStorage()\n  }\n\n  login(username: string, password: string): Observable<LoginResponse> {\n    return this.http\n      .post<LoginResponse>(`${this.apiUrl}/auth/login.php`, {\n        username,\n        password,\n      })\n      .pipe(\n        tap((response) => {\n          if (response.token && response.usuario) {\n            localStorage.setItem(\"token\", response.token)\n            localStorage.setItem(\"usuario\", JSON.stringify(response.usuario))\n            this.currentUserSubject.next(response.usuario)\n          }\n        }),\n      )\n  }\n\n  logout(): void {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"usuario\")\n    this.currentUserSubject.next(null)\n    this.router.navigate([\"/login\"])\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem(\"token\")\n  }\n\n  getCurrentUser(): Usuario | null {\n    return this.currentUserSubject.value\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.getToken()\n  }\n\n  tienePermiso(permiso: string): boolean {\n    const usuario = this.getCurrentUser()\n    return usuario ? usuario.permisos.includes(permiso) : false\n  }\n\n  esAdministrador(): boolean {\n    const usuario = this.getCurrentUser()\n    return usuario ? usuario.rol_nombre === \"Administrador\" : false\n  }\n\n  private cargarUsuarioDesdeStorage(): void {\n    const usuarioStr = localStorage.getItem(\"usuario\")\n    if (usuarioStr) {\n      try {\n        const usuario = JSON.parse(usuarioStr)\n        this.currentUserSubject.next(usuario)\n      } catch (e) {\n        console.error(\"Error al cargar usuario desde storage\", e)\n      }\n    }\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,EAAmBC,GAAG,QAAQ,MAAM;;;;AAO5D,OAAM,MAAOC,WAAW;EAKtBC,YACUC,IAAgB,EAChBC,MAAc;IADd,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IANR,KAAAC,MAAM,GAAG,8BAA8B;IACvC,KAAAC,kBAAkB,GAAG,IAAIP,eAAe,CAAiB,IAAI,CAAC;IAC/D,KAAAQ,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;IAM1D,IAAI,CAACC,yBAAyB,EAAE;EAClC;EAEAC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACT,IAAI,CACbU,IAAI,CAAgB,GAAG,IAAI,CAACR,MAAM,iBAAiB,EAAE;MACpDM,QAAQ;MACRC;KACD,CAAC,CACDE,IAAI,CACHd,GAAG,CAAEe,QAAQ,IAAI;MACf,IAAIA,QAAQ,CAACC,KAAK,IAAID,QAAQ,CAACE,OAAO,EAAE;QACtCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACC,KAAK,CAAC;QAC7CE,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,OAAO,CAAC,CAAC;QACjE,IAAI,CAACX,kBAAkB,CAACgB,IAAI,CAACP,QAAQ,CAACE,OAAO,CAAC;;IAElD,CAAC,CAAC,CACH;EACL;EAEAM,MAAMA,CAAA;IACJL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCN,YAAY,CAACM,UAAU,CAAC,SAAS,CAAC;IAClC,IAAI,CAAClB,kBAAkB,CAACgB,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAAClB,MAAM,CAACqB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,QAAQA,CAAA;IACN,OAAOR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACtB,kBAAkB,CAACuB,KAAK;EACtC;EAEAC,eAAeA,CAAA;IACb,OAAO,CAAC,CAAC,IAAI,CAACJ,QAAQ,EAAE;EAC1B;EAEAK,YAAYA,CAACC,OAAe;IAC1B,MAAMf,OAAO,GAAG,IAAI,CAACW,cAAc,EAAE;IACrC,OAAOX,OAAO,GAAGA,OAAO,CAACgB,QAAQ,CAACC,QAAQ,CAACF,OAAO,CAAC,GAAG,KAAK;EAC7D;EAEAG,eAAeA,CAAA;IACb,MAAMlB,OAAO,GAAG,IAAI,CAACW,cAAc,EAAE;IACrC,OAAOX,OAAO,GAAGA,OAAO,CAACmB,UAAU,KAAK,eAAe,GAAG,KAAK;EACjE;EAEQ3B,yBAAyBA,CAAA;IAC/B,MAAM4B,UAAU,GAAGnB,YAAY,CAACS,OAAO,CAAC,SAAS,CAAC;IAClD,IAAIU,UAAU,EAAE;MACd,IAAI;QACF,MAAMpB,OAAO,GAAGG,IAAI,CAACkB,KAAK,CAACD,UAAU,CAAC;QACtC,IAAI,CAAC/B,kBAAkB,CAACgB,IAAI,CAACL,OAAO,CAAC;OACtC,CAAC,OAAOsB,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEF,CAAC,CAAC;;;EAG/D;;;uBApEWtC,WAAW,EAAAyC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAX9C,WAAW;MAAA+C,OAAA,EAAX/C,WAAW,CAAAgD,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}