{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class HasPermissionDirective {\n  set appHasPermission(permiso) {\n    this.permiso = permiso;\n    this.updateView();\n  }\n  constructor(templateRef, viewContainer, authService) {\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.authService = authService;\n    this.permiso = \"\";\n  }\n  ngOnInit() {\n    this.updateView();\n  }\n  updateView() {\n    if (this.authService.tienePermiso(this.permiso)) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainer.clear();\n    }\n  }\n  static {\n    this.ɵfac = function HasPermissionDirective_Factory(t) {\n      return new (t || HasPermissionDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: HasPermissionDirective,\n      selectors: [[\"\", \"appHasPermission\", \"\"]],\n      inputs: {\n        appHasPermission: \"appHasPermission\"\n      },\n      standalone: true\n    });\n  }\n}","map":{"version":3,"names":["HasPermissionDirective","appHasPermission","permiso","updateView","constructor","templateRef","viewContainer","authService","ngOnInit","tienePermiso","createEmbeddedView","clear","i0","ɵɵdirectiveInject","TemplateRef","ViewContainerRef","i1","AuthService","selectors","inputs","standalone"],"sources":["C:\\Users\\ferme\\Downloads\\roles-permisos-system\\frontend\\src\\app\\directives\\has-permission.directive.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef, OnInit } from \"@angular/core\"\nimport { AuthService } from \"../services/auth.service\"\n\n@Directive({\n  selector: \"[appHasPermission]\",\n  standalone: true,\n})\nexport class HasPermissionDirective implements OnInit {\n  private permiso = \"\"\n\n  @Input() set appHasPermission(permiso: string) {\n    this.permiso = permiso\n    this.updateView()\n  }\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authService: AuthService,\n  ) {}\n\n  ngOnInit(): void {\n    this.updateView()\n  }\n\n  private updateView(): void {\n    if (this.authService.tienePermiso(this.permiso)) {\n      this.viewContainer.createEmbeddedView(this.templateRef)\n    } else {\n      this.viewContainer.clear()\n    }\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,sBAAsB;EAGjC,IAAaC,gBAAgBA,CAACC,OAAe;IAC3C,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,YACUC,WAA6B,EAC7BC,aAA+B,EAC/BC,WAAwB;IAFxB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,WAAW,GAAXA,WAAW;IAVb,KAAAL,OAAO,GAAG,EAAE;EAWjB;EAEHM,QAAQA,CAAA;IACN,IAAI,CAACL,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;IAChB,IAAI,IAAI,CAACI,WAAW,CAACE,YAAY,CAAC,IAAI,CAACP,OAAO,CAAC,EAAE;MAC/C,IAAI,CAACI,aAAa,CAACI,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAAC;KACxD,MAAM;MACL,IAAI,CAACC,aAAa,CAACK,KAAK,EAAE;;EAE9B;;;uBAxBWX,sBAAsB,EAAAY,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,WAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,gBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAtBjB,sBAAsB;MAAAkB,SAAA;MAAAC,MAAA;QAAAlB,gBAAA;MAAA;MAAAmB,UAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}