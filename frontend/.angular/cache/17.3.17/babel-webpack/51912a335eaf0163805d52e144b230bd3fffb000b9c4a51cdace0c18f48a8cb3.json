{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Directive, Input } from \"@angular/core\";\nlet HasPermissionDirective = class HasPermissionDirective {\n  set appHasPermission(permiso) {\n    this.permiso = permiso;\n    this.updateView();\n  }\n  constructor(templateRef, viewContainer, authService) {\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.authService = authService;\n    this.permiso = \"\";\n  }\n  ngOnInit() {\n    this.updateView();\n  }\n  updateView() {\n    if (this.authService.tienePermiso(this.permiso)) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainer.clear();\n    }\n  }\n};\n__decorate([Input()], HasPermissionDirective.prototype, \"appHasPermission\", null);\nHasPermissionDirective = __decorate([Directive({\n  selector: \"[appHasPermission]\",\n  standalone: true\n})], HasPermissionDirective);\nexport { HasPermissionDirective };","map":{"version":3,"names":["Directive","Input","HasPermissionDirective","appHasPermission","permiso","updateView","constructor","templateRef","viewContainer","authService","ngOnInit","tienePermiso","createEmbeddedView","clear","__decorate","selector","standalone"],"sources":["C:\\Users\\ferme\\Downloads\\roles-permisos-system\\frontend\\src\\app\\directives\\has-permission.directive.ts"],"sourcesContent":["import { Directive, Input, type TemplateRef, type ViewContainerRef, type OnInit } from \"@angular/core\"\nimport { AuthService } from \"../services/auth.service\"\n\n@Directive({\n  selector: \"[appHasPermission]\",\n  standalone: true,\n})\nexport class HasPermissionDirective implements OnInit {\n  private permiso = \"\"\n\n  @Input() set appHasPermission(permiso: string) {\n    this.permiso = permiso\n    this.updateView()\n  }\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authService: AuthService,\n  ) {}\n\n  ngOnInit(): void {\n    this.updateView()\n  }\n\n  private updateView(): void {\n    if (this.authService.tienePermiso(this.permiso)) {\n      this.viewContainer.createEmbeddedView(this.templateRef)\n    } else {\n      this.viewContainer.clear()\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAA8D,eAAe;AAO/F,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAGxB,IAAIC,gBAAgBA,CAACC,OAAe;IAC3C,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,YACUC,WAA6B,EAC7BC,aAA+B,EAC/BC,WAAwB;IAFxB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,WAAW,GAAXA,WAAW;IAVb,KAAAL,OAAO,GAAG,EAAE;EAWjB;EAEHM,QAAQA,CAAA;IACN,IAAI,CAACL,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;IAChB,IAAI,IAAI,CAACI,WAAW,CAACE,YAAY,CAAC,IAAI,CAACP,OAAO,CAAC,EAAE;MAC/C,IAAI,CAACI,aAAa,CAACI,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAAC;KACxD,MAAM;MACL,IAAI,CAACC,aAAa,CAACK,KAAK,EAAE;;EAE9B;CACD;AAtBUC,UAAA,EAARb,KAAK,EAAE,C,6DAGP;AANUC,sBAAsB,GAAAY,UAAA,EAJlCd,SAAS,CAAC;EACTe,QAAQ,EAAE,oBAAoB;EAC9BC,UAAU,EAAE;CACb,CAAC,C,EACWd,sBAAsB,CAyBlC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}